[W 2022-12-13 20:21:45.631 LabApp] 'ip' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-13 20:21:45.631 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-13 20:21:45.631 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-13 20:21:45.631 LabApp] 'port' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-13 20:21:45.631 LabApp] 'allow_remote_access' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[I 2022-12-13 20:21:45.640 ServerApp] jupyterlab | extension was successfully linked.
[I 2022-12-13 20:21:45.650 ServerApp] nbclassic | extension was successfully linked.
[I 2022-12-13 20:21:45.867 ServerApp] notebook_shim | extension was successfully linked.
[W 2022-12-13 20:21:45.904 ServerApp] WARNING: The Jupyter server is listening on all IP addresses and not using encryption. This is not recommended.
[I 2022-12-13 20:21:45.905 ServerApp] notebook_shim | extension was successfully loaded.
[I 2022-12-13 20:21:45.906 LabApp] JupyterLab extension loaded from /home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/jupyterlab
[I 2022-12-13 20:21:45.906 LabApp] JupyterLab application directory is /home/cxh/anaconda3/envs/bisenet/share/jupyter/lab
[I 2022-12-13 20:21:45.910 ServerApp] jupyterlab | extension was successfully loaded.
[I 2022-12-13 20:21:45.913 ServerApp] nbclassic | extension was successfully loaded.
[I 2022-12-13 20:21:45.913 ServerApp] Serving notebooks from local directory: /home/cxh/mr/BiSeNet
[I 2022-12-13 20:21:45.913 ServerApp] Jupyter Server 1.18.1 is running at:
[I 2022-12-13 20:21:45.913 ServerApp] http://localhost:14923/lab
[I 2022-12-13 20:21:45.913 ServerApp]  or http://127.0.0.1:14923/lab
[I 2022-12-13 20:21:45.913 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2022-12-13 20:22:45.345 ServerApp] Interrupted...
WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
WARNING:torch.distributed.elastic.agent.server.api:Received 1 death signal, shutting down workers
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 32485 closing signal SIGHUP
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 32486 closing signal SIGHUP
Traceback (most recent call last):
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 765, in <module>
    main()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 761, in main
    run(args)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 752, in run
    elastic_launch(
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 236, in launch_agent
    result = agent.run()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/metrics/api.py", line 125, in wrapper
    result = f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 709, in run
    result = self._invoke_run(role)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 850, in _invoke_run
    time.sleep(monitor_interval)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 60, in _terminate_process_handler
    raise SignalException(f"Process {os.getpid()} got signal: {sigval}", sigval=sigval)
torch.distributed.elastic.multiprocessing.api.SignalException: Process 32473 got signal: 1
WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
WARNING:torch.distributed.elastic.agent.server.api:Received 1 death signal, shutting down workers
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 35705 closing signal SIGHUP
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 35706 closing signal SIGHUP
Traceback (most recent call last):
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 765, in <module>
    main()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 761, in main
    run(args)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 752, in run
    elastic_launch(
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 236, in launch_agent
    result = agent.run()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/metrics/api.py", line 125, in wrapper
    result = f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 709, in run
    result = self._invoke_run(role)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 850, in _invoke_run
    time.sleep(monitor_interval)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 60, in _terminate_process_handler
    raise SignalException(f"Process {os.getpid()} got signal: {sigval}", sigval=sigval)
torch.distributed.elastic.multiprocessing.api.SignalException: Process 35688 got signal: 1
WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
iter: 200/30000, Cam_epoch: 0, CityScapes_epoch: 1.0698924731182795, lr: 0.004998, eta: 3 days, 22:21:30, time: 169.92, loss: 1032.0781, loss_seg: 2.5718, loss_contrast: 1.4628, loss_domain:  1017.6163, loss_aux0: 2.6998, loss_aux1: 2.5703, loss_aux2: 2.5843, loss_aux3: 2.5729
WARNING:torch.distributed.elastic.agent.server.api:Received 1 death signal, shutting down workers
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 41079 closing signal SIGHUP
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 41080 closing signal SIGHUP
Traceback (most recent call last):
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 765, in <module>
    main()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 761, in main
    run(args)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 752, in run
    elastic_launch(
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 236, in launch_agent
    result = agent.run()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/metrics/api.py", line 125, in wrapper
    result = f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 709, in run
    result = self._invoke_run(role)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 850, in _invoke_run
    time.sleep(monitor_interval)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 60, in _terminate_process_handler
    raise SignalException(f"Process {os.getpid()} got signal: {sigval}", sigval=sigval)
torch.distributed.elastic.multiprocessing.api.SignalException: Process 41061 got signal: 1
WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
WARNING:torch.distributed.elastic.agent.server.api:Received 1 death signal, shutting down workers
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 45208 closing signal SIGHUP
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 45209 closing signal SIGHUP
Traceback (most recent call last):
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 765, in <module>
    main()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 761, in main
    run(args)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 752, in run
    elastic_launch(
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 236, in launch_agent
    result = agent.run()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/metrics/api.py", line 125, in wrapper
    result = f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 709, in run
    result = self._invoke_run(role)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/agent/server/api.py", line 850, in _invoke_run
    time.sleep(monitor_interval)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 60, in _terminate_process_handler
    raise SignalException(f"Process {os.getpid()} got signal: {sigval}", sigval=sigval)
torch.distributed.elastic.multiprocessing.api.SignalException: Process 45190 got signal: 1
WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
iter: 200/30000, Cam_epoch: 0, CityScapes_epoch: 1.0698924731182795, lr: 0.004998, eta: 3 days, 23:27:14, time: 171.90, loss: 1561.4778, loss_seg: 2.6071, loss_contrast: 1.6459, loss_domain:  1546.7366, loss_aux0: 2.6540, loss_aux1: 2.6490, loss_aux2: 2.6041, loss_aux3: 2.5813
iter: 300/30000, Cam_epoch: 0, CityScapes_epoch: 1.60752688172043, lr: 0.004983, eta: 19:45:14, time: 101.75, loss: 13.5735, loss_seg: 2.1444, loss_contrast: 1.5198, loss_domain:  1.2831, loss_aux0: 2.1902, loss_aux1: 2.1834, loss_aux2: 2.1424, loss_aux3: 2.1102
iter: 400/30000, Cam_epoch: 0, CityScapes_epoch: 2.1451612903225805, lr: 0.004968, eta: 14:27:43, time: 102.16, loss: 12.3598, loss_seg: 1.9629, loss_contrast: 1.2966, loss_domain:  1.2023, loss_aux0: 2.0172, loss_aux1: 1.9890, loss_aux2: 1.9606, loss_aux3: 1.9312
iter: 500/30000, Cam_epoch: 0, CityScapes_epoch: 2.682795698924731, lr: 0.004953, eta: 12:30:16, time: 101.88, loss: 12.0598, loss_seg: 1.9304, loss_contrast: 1.1885, loss_domain:  1.1622, loss_aux0: 1.9918, loss_aux1: 1.9593, loss_aux2: 1.9284, loss_aux3: 1.8991
iter: 600/30000, Cam_epoch: 0, CityScapes_epoch: 3.2204301075268815, lr: 0.004938, eta: 11:29:09, time: 102.32, loss: 11.6716, loss_seg: 1.9152, loss_contrast: 1.0305, loss_domain:  1.0174, loss_aux0: 1.9765, loss_aux1: 1.9429, loss_aux2: 1.9088, loss_aux3: 1.8802
iter: 700/30000, Cam_epoch: 0, CityScapes_epoch: 3.7580645161290325, lr: 0.004923, eta: 10:51:14, time: 102.48, loss: 11.8084, loss_seg: 1.9154, loss_contrast: 1.0221, loss_domain:  1.1473, loss_aux0: 1.9840, loss_aux1: 1.9475, loss_aux2: 1.9118, loss_aux3: 1.8804
iter: 800/30000, Cam_epoch: 0, CityScapes_epoch: 4.295698924731183, lr: 0.004908, eta: 10:25:00, time: 102.34, loss: 11.5180, loss_seg: 1.9005, loss_contrast: 0.9388, loss_domain:  1.0127, loss_aux0: 1.9707, loss_aux1: 1.9347, loss_aux2: 1.8969, loss_aux3: 1.8637
iter: 900/30000, Cam_epoch: 0, CityScapes_epoch: 4.833333333333333, lr: 0.004893, eta: 10:05:29, time: 102.13, loss: 11.6068, loss_seg: 1.9042, loss_contrast: 0.9411, loss_domain:  1.0837, loss_aux0: 1.9742, loss_aux1: 1.9364, loss_aux2: 1.8998, loss_aux3: 1.8675
iter: 1000/30000, Cam_epoch: 0, CityScapes_epoch: 5.370967741935484, lr: 0.004878, eta: 9:50:03, time: 101.66, loss: 11.6011, loss_seg: 1.8993, loss_contrast: 0.9249, loss_domain:  1.1232, loss_aux0: 1.9690, loss_aux1: 1.9304, loss_aux2: 1.8931, loss_aux3: 1.8612

save models to res/Mds/model_1000.pth
  0%|          | 0/125 [00:00<?, ?it/s]  1%|          | 1/125 [00:01<03:24,  1.65s/it]  2%|▏         | 2/125 [00:02<02:08,  1.04s/it]  2%|▏         | 3/125 [00:03<01:52,  1.09it/s]  3%|▎         | 4/125 [00:03<01:41,  1.19it/s]  4%|▍         | 5/125 [00:04<01:35,  1.26it/s]  5%|▍         | 6/125 [00:05<01:34,  1.26it/s]  6%|▌         | 7/125 [00:06<01:32,  1.28it/s]  6%|▋         | 8/125 [00:06<01:25,  1.37it/s]  7%|▋         | 9/125 [00:07<01:25,  1.36it/s]  8%|▊         | 10/125 [00:08<01:29,  1.29it/s]  9%|▉         | 11/125 [00:09<01:27,  1.30it/s] 10%|▉         | 12/125 [00:09<01:27,  1.29it/s] 10%|█         | 13/125 [00:10<01:21,  1.38it/s] 11%|█         | 14/125 [00:11<01:16,  1.45it/s] 12%|█▏        | 15/125 [00:11<01:09,  1.57it/s] 13%|█▎        | 16/125 [00:12<01:12,  1.49it/s] 14%|█▎        | 17/125 [00:12<01:07,  1.59it/s] 14%|█▍        | 18/125 [00:13<00:59,  1.79it/s] 15%|█▌        | 19/125 [00:13<00:54,  1.96it/s] 16%|█▌        | 20/125 [00:14<00:50,  2.09it/s] 17%|█▋        | 21/125 [00:14<00:47,  2.19it/s] 18%|█▊        | 22/125 [00:14<00:49,  2.08it/s] 18%|█▊        | 23/125 [00:15<00:46,  2.18it/s] 19%|█▉        | 24/125 [00:15<00:44,  2.26it/s] 20%|██        | 25/125 [00:16<00:46,  2.14it/s] 21%|██        | 26/125 [00:16<00:48,  2.04it/s] 22%|██▏       | 27/125 [00:17<00:49,  2.00it/s] 22%|██▏       | 28/125 [00:17<00:50,  1.94it/s] 23%|██▎       | 29/125 [00:18<00:51,  1.88it/s] 24%|██▍       | 30/125 [00:19<00:55,  1.71it/s] 25%|██▍       | 31/125 [00:19<00:49,  1.90it/s] 26%|██▌       | 32/125 [00:20<00:50,  1.83it/s] 26%|██▋       | 33/125 [00:20<00:55,  1.67it/s] 27%|██▋       | 34/125 [00:21<00:51,  1.77it/s] 28%|██▊       | 35/125 [00:22<00:53,  1.70it/s] 29%|██▉       | 36/125 [00:22<00:58,  1.53it/s] 30%|██▉       | 37/125 [00:23<00:55,  1.58it/s] 30%|███       | 38/125 [00:23<00:51,  1.68it/s] 31%|███       | 39/125 [00:24<00:49,  1.72it/s] 32%|███▏      | 40/125 [00:25<00:54,  1.57it/s] 33%|███▎      | 41/125 [00:25<00:51,  1.64it/s] 34%|███▎      | 42/125 [00:26<00:53,  1.54it/s] 34%|███▍      | 43/125 [00:27<00:54,  1.51it/s] 35%|███▌      | 44/125 [00:27<00:55,  1.47it/s] 36%|███▌      | 45/125 [00:28<00:53,  1.51it/s] 37%|███▋      | 46/125 [00:28<00:46,  1.70it/s] 38%|███▊      | 47/125 [00:29<00:43,  1.78it/s] 38%|███▊      | 48/125 [00:30<00:44,  1.74it/s] 39%|███▉      | 49/125 [00:30<00:47,  1.59it/s] 40%|████      | 50/125 [00:31<00:50,  1.50it/s] 41%|████      | 51/125 [00:32<00:50,  1.45it/s] 42%|████▏     | 52/125 [00:33<00:51,  1.43it/s] 42%|████▏     | 53/125 [00:33<00:44,  1.62it/s] 43%|████▎     | 54/125 [00:34<00:42,  1.66it/s] 44%|████▍     | 55/125 [00:34<00:37,  1.85it/s] 45%|████▍     | 56/125 [00:34<00:36,  1.87it/s] 46%|████▌     | 57/125 [00:35<00:33,  2.02it/s] 46%|████▋     | 58/125 [00:35<00:31,  2.16it/s] 47%|████▋     | 59/125 [00:36<00:32,  2.06it/s] 48%|████▊     | 60/125 [00:37<00:37,  1.75it/s] 49%|████▉     | 61/125 [00:37<00:35,  1.80it/s] 50%|████▉     | 62/125 [00:38<00:32,  1.94it/s] 50%|█████     | 63/125 [00:38<00:35,  1.75it/s] 51%|█████     | 64/125 [00:39<00:37,  1.61it/s] 52%|█████▏    | 65/125 [00:39<00:33,  1.78it/s] 53%|█████▎    | 66/125 [00:40<00:36,  1.62it/s] 54%|█████▎    | 67/125 [00:41<00:33,  1.71it/s] 54%|█████▍    | 68/125 [00:41<00:29,  1.91it/s] 55%|█████▌    | 69/125 [00:41<00:28,  1.95it/s] 56%|█████▌    | 70/125 [00:42<00:32,  1.70it/s] 57%|█████▋    | 71/125 [00:43<00:34,  1.57it/s] 58%|█████▊    | 72/125 [00:44<00:35,  1.49it/s] 58%|█████▊    | 73/125 [00:44<00:34,  1.52it/s] 59%|█████▉    | 74/125 [00:45<00:31,  1.61it/s] 60%|██████    | 75/125 [00:46<00:33,  1.50it/s] 61%|██████    | 76/125 [00:46<00:30,  1.60it/s] 62%|██████▏   | 77/125 [00:47<00:28,  1.68it/s] 62%|██████▏   | 78/125 [00:47<00:28,  1.64it/s] 63%|██████▎   | 79/125 [00:48<00:30,  1.52it/s] 64%|██████▍   | 80/125 [00:49<00:33,  1.36it/s] 65%|██████▍   | 81/125 [00:50<00:30,  1.43it/s] 66%|██████▌   | 82/125 [00:50<00:27,  1.56it/s] 66%|██████▋   | 83/125 [00:51<00:23,  1.75it/s] 67%|██████▋   | 84/125 [00:51<00:25,  1.59it/s] 68%|██████▊   | 85/125 [00:52<00:22,  1.79it/s] 69%|██████▉   | 86/125 [00:52<00:19,  2.00it/s] 70%|██████▉   | 87/125 [00:53<00:17,  2.14it/s] 70%|███████   | 88/125 [00:53<00:19,  1.93it/s] 71%|███████   | 89/125 [00:54<00:19,  1.84it/s] 72%|███████▏  | 90/125 [00:54<00:17,  1.97it/s] 73%|███████▎  | 91/125 [00:55<00:19,  1.71it/s] 74%|███████▎  | 92/125 [00:56<00:21,  1.57it/s] 74%|███████▍  | 93/125 [00:56<00:20,  1.56it/s] 75%|███████▌  | 94/125 [00:57<00:21,  1.42it/s] 76%|███████▌  | 95/125 [00:58<00:19,  1.53it/s] 77%|███████▋  | 96/125 [00:58<00:19,  1.46it/s] 78%|███████▊  | 97/125 [00:59<00:17,  1.59it/s] 78%|███████▊  | 98/125 [01:00<00:17,  1.57it/s] 79%|███████▉  | 99/125 [01:00<00:17,  1.49it/s] 80%|████████  | 100/125 [01:01<00:17,  1.43it/s] 81%|████████  | 101/125 [01:02<00:15,  1.52it/s] 82%|████████▏ | 102/125 [01:02<00:14,  1.59it/s] 82%|████████▏ | 103/125 [01:03<00:14,  1.48it/s] 83%|████████▎ | 104/125 [01:03<00:12,  1.67it/s] 84%|████████▍ | 105/125 [01:04<00:12,  1.62it/s] 85%|████████▍ | 106/125 [01:05<00:10,  1.80it/s] 86%|████████▌ | 107/125 [01:05<00:10,  1.78it/s] 86%|████████▋ | 108/125 [01:06<00:09,  1.80it/s] 87%|████████▋ | 109/125 [01:06<00:09,  1.76it/s] 88%|████████▊ | 110/125 [01:07<00:09,  1.60it/s] 89%|████████▉ | 111/125 [01:08<00:09,  1.49it/s] 90%|████████▉ | 112/125 [01:09<00:09,  1.44it/s] 90%|█████████ | 113/125 [01:09<00:08,  1.41it/s] 91%|█████████ | 114/125 [01:10<00:06,  1.61it/s] 92%|█████████▏| 115/125 [01:10<00:05,  1.82it/s] 93%|█████████▎| 116/125 [01:10<00:04,  2.02it/s] 94%|█████████▎| 117/125 [01:11<00:03,  2.01it/s] 94%|█████████▍| 118/125 [01:12<00:04,  1.74it/s] 95%|█████████▌| 119/125 [01:12<00:03,  1.82it/s] 96%|█████████▌| 120/125 [01:13<00:03,  1.63it/s] 97%|█████████▋| 121/125 [01:14<00:02,  1.67it/s] 98%|█████████▊| 122/125 [01:14<00:01,  1.72it/s] 98%|█████████▊| 123/125 [01:15<00:01,  1.58it/s] 99%|█████████▉| 124/125 [01:16<00:00,  1.50it/s]100%|██████████| 125/125 [01:16<00:00,  1.43it/s]100%|██████████| 125/125 [01:16<00:00,  1.62it/s]
tensor([0.8923, 0.3413, 0.7619, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8294,
        0.0000, 0.8194, 0.0000, 0.0000, 0.6479, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000], device='cuda:1')
tensor([0.8923, 0.3413, 0.7619, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8294,
        0.0000, 0.8194, 0.0000, 0.0000, 0.6479, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000], device='cuda:0')
  0%|          | 0/58 [00:00<?, ?it/s]  2%|▏         | 1/58 [00:00<00:44,  1.29it/s]  3%|▎         | 2/58 [00:00<00:24,  2.26it/s]  5%|▌         | 3/58 [00:01<00:18,  3.03it/s]  7%|▋         | 4/58 [00:01<00:15,  3.60it/s]  9%|▊         | 5/58 [00:01<00:13,  4.01it/s] 10%|█         | 6/58 [00:01<00:12,  4.28it/s] 12%|█▏        | 7/58 [00:01<00:11,  4.39it/s] 14%|█▍        | 8/58 [00:02<00:11,  4.33it/s] 16%|█▌        | 9/58 [00:02<00:10,  4.53it/s] 17%|█▋        | 10/58 [00:02<00:10,  4.70it/s] 19%|█▉        | 11/58 [00:02<00:10,  4.53it/s] 21%|██        | 12/58 [00:03<00:09,  4.73it/s] 22%|██▏       | 13/58 [00:03<00:08,  5.17it/s] 24%|██▍       | 14/58 [00:03<00:07,  5.73it/s] 26%|██▌       | 15/58 [00:03<00:07,  5.56it/s] 28%|██▊       | 16/58 [00:03<00:08,  4.88it/s] 29%|██▉       | 17/58 [00:03<00:08,  4.96it/s] 31%|███       | 18/58 [00:04<00:08,  4.93it/s] 33%|███▎      | 19/58 [00:04<00:07,  5.50it/s] 34%|███▍      | 20/58 [00:04<00:06,  6.04it/s] 36%|███▌      | 21/58 [00:04<00:05,  6.45it/s] 38%|███▊      | 22/58 [00:04<00:05,  6.66it/s] 40%|███▉      | 23/58 [00:04<00:05,  6.87it/s] 41%|████▏     | 24/58 [00:04<00:04,  6.96it/s] 43%|████▎     | 25/58 [00:05<00:04,  7.24it/s] 45%|████▍     | 26/58 [00:05<00:04,  7.17it/s] 47%|████▋     | 27/58 [00:05<00:04,  7.42it/s] 48%|████▊     | 28/58 [00:05<00:04,  6.04it/s] 50%|█████     | 29/58 [00:05<00:05,  5.68it/s] 52%|█████▏    | 30/58 [00:05<00:04,  6.06it/s] 53%|█████▎    | 31/58 [00:06<00:04,  6.47it/s] 55%|█████▌    | 32/58 [00:06<00:04,  6.01it/s] 57%|█████▋    | 33/58 [00:06<00:03,  6.28it/s] 59%|█████▊    | 34/58 [00:06<00:04,  5.88it/s] 60%|██████    | 35/58 [00:06<00:04,  5.60it/s] 62%|██████▏   | 36/58 [00:07<00:04,  5.35it/s] 64%|██████▍   | 37/58 [00:07<00:04,  4.79it/s] 66%|██████▌   | 38/58 [00:07<00:04,  4.85it/s] 67%|██████▋   | 39/58 [00:07<00:03,  5.39it/s] 69%|██████▉   | 40/58 [00:07<00:03,  5.31it/s] 71%|███████   | 41/58 [00:07<00:02,  5.79it/s] 72%|███████▏  | 42/58 [00:08<00:02,  6.14it/s] 74%|███████▍  | 43/58 [00:08<00:02,  5.76it/s] 76%|███████▌  | 44/58 [00:08<00:02,  6.17it/s] 78%|███████▊  | 45/58 [00:08<00:02,  5.85it/s] 79%|███████▉  | 46/58 [00:08<00:02,  5.17it/s] 81%|████████  | 47/58 [00:09<00:02,  5.16it/s] 83%|████████▎ | 48/58 [00:09<00:01,  5.16it/s] 84%|████████▍ | 49/58 [00:09<00:01,  5.56it/s] 86%|████████▌ | 50/58 [00:09<00:01,  6.12it/s] 88%|████████▊ | 51/58 [00:09<00:01,  6.67it/s] 90%|████████▉ | 52/58 [00:09<00:00,  7.07it/s] 91%|█████████▏| 53/58 [00:09<00:00,  7.40it/s] 93%|█████████▎| 54/58 [00:10<00:00,  7.56it/s] 95%|█████████▍| 55/58 [00:10<00:00,  6.65it/s] 97%|█████████▋| 56/58 [00:10<00:00,  6.00it/s] 98%|█████████▊| 57/58 [00:10<00:00,  6.49it/s]100%|██████████| 58/58 [00:10<00:00,  6.95it/s]100%|██████████| 58/58 [00:10<00:00,  5.41it/s]
tensor([6.3992e-02, 2.4320e-01, 0.0000e+00, 6.9755e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2464e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
       device='cuda:1')
tensor([6.3992e-02, 2.4320e-01, 0.0000e+00, 6.9755e-04, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2464e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
       device='cuda:0')
Cam single mIOU is: 0.025667531415820122
CityScapes single mIOU is: 0.22590842843055725

|           |   single_scale |
|-----------+----------------|
| 0.0256675 |       0.225908 |
iter: 1100/30000, Cam_epoch: 0, CityScapes_epoch: 5.908602150537634, lr: 0.004863, eta: 10:24:30, time: 190.16, loss: 11.7461, loss_seg: 1.9022, loss_contrast: 0.9326, loss_domain:  1.2430, loss_aux0: 1.9745, loss_aux1: 1.9350, loss_aux2: 1.8955, loss_aux3: 1.8633
iter: 1200/30000, Cam_epoch: 0, CityScapes_epoch: 6.446236559139785, lr: 0.004848, eta: 10:09:30, time: 101.81, loss: 11.5831, loss_seg: 1.8955, loss_contrast: 0.9178, loss_domain:  1.1254, loss_aux0: 1.9681, loss_aux1: 1.9282, loss_aux2: 1.8893, loss_aux3: 1.8588
iter: 1300/30000, Cam_epoch: 0, CityScapes_epoch: 6.983870967741935, lr: 0.004833, eta: 9:57:09, time: 102.42, loss: 11.6622, loss_seg: 1.8994, loss_contrast: 0.9093, loss_domain:  1.1995, loss_aux0: 1.9700, loss_aux1: 1.9302, loss_aux2: 1.8924, loss_aux3: 1.8614
iter: 1400/30000, Cam_epoch: 0, CityScapes_epoch: 7.521505376344086, lr: 0.004818, eta: 9:46:26, time: 102.15, loss: 11.5972, loss_seg: 1.8933, loss_contrast: 0.8818, loss_domain:  1.1961, loss_aux0: 1.9642, loss_aux1: 1.9238, loss_aux2: 1.8838, loss_aux3: 1.8541
iter: 1500/30000, Cam_epoch: 0, CityScapes_epoch: 8.059139784946236, lr: 0.004803, eta: 9:37:13, time: 102.45, loss: 11.5579, loss_seg: 1.8820, loss_contrast: 0.8602, loss_domain:  1.2316, loss_aux0: 1.9545, loss_aux1: 1.9139, loss_aux2: 1.8736, loss_aux3: 1.8421
iter: 1600/30000, Cam_epoch: 0, CityScapes_epoch: 8.596774193548388, lr: 0.004788, eta: 9:28:58, time: 102.23, loss: 11.5199, loss_seg: 1.8920, loss_contrast: 0.8729, loss_domain:  1.1386, loss_aux0: 1.9613, loss_aux1: 1.9208, loss_aux2: 1.8817, loss_aux3: 1.8527
iter: 1700/30000, Cam_epoch: 0, CityScapes_epoch: 9.134408602150538, lr: 0.004772, eta: 9:21:29, time: 101.90, loss: 11.5818, loss_seg: 1.8908, loss_contrast: 0.8627, loss_domain:  1.2028, loss_aux0: 1.9646, loss_aux1: 1.9237, loss_aux2: 1.8839, loss_aux3: 1.8534
iter: 1800/30000, Cam_epoch: 0, CityScapes_epoch: 9.672043010752688, lr: 0.004757, eta: 9:14:45, time: 102.01, loss: 11.8087, loss_seg: 1.8872, loss_contrast: 0.9215, loss_domain:  1.3889, loss_aux0: 1.9586, loss_aux1: 1.9189, loss_aux2: 1.8809, loss_aux3: 1.8527
iter: 1900/30000, Cam_epoch: 0, CityScapes_epoch: 10.209677419354838, lr: 0.004742, eta: 9:08:36, time: 101.98, loss: 11.5482, loss_seg: 1.8804, loss_contrast: 0.8397, loss_domain:  1.2542, loss_aux0: 1.9504, loss_aux1: 1.9091, loss_aux2: 1.8715, loss_aux3: 1.8429
iter: 2000/30000, Cam_epoch: 0, CityScapes_epoch: 10.74731182795699, lr: 0.004727, eta: 9:02:50, time: 101.60, loss: 11.5553, loss_seg: 1.8853, loss_contrast: 0.8403, loss_domain:  1.2340, loss_aux0: 1.9569, loss_aux1: 1.9149, loss_aux2: 1.8759, loss_aux3: 1.8479

save models to res/Mds/model_2000.pth
  0%|          | 0/125 [00:00<?, ?it/s]  1%|          | 1/125 [00:01<02:50,  1.37s/it]  2%|▏         | 2/125 [00:01<01:41,  1.21it/s]  2%|▏         | 3/125 [00:02<01:16,  1.59it/s]  3%|▎         | 4/125 [00:02<01:02,  1.93it/s]  4%|▍         | 5/125 [00:02<00:55,  2.14it/s]  5%|▍         | 6/125 [00:03<00:50,  2.34it/s]  6%|▌         | 7/125 [00:03<00:53,  2.21it/s]  6%|▋         | 8/125 [00:04<00:57,  2.03it/s]  7%|▋         | 9/125 [00:04<00:57,  2.03it/s]  8%|▊         | 10/125 [00:05<00:58,  1.97it/s]  9%|▉         | 11/125 [00:05<00:53,  2.14it/s] 10%|▉         | 12/125 [00:06<00:49,  2.28it/s] 10%|█         | 13/125 [00:06<00:54,  2.06it/s] 11%|█         | 14/125 [00:07<00:50,  2.20it/s] 12%|█▏        | 15/125 [00:07<00:46,  2.37it/s] 13%|█▎        | 16/125 [00:07<00:44,  2.43it/s] 14%|█▎        | 17/125 [00:08<00:43,  2.51it/s] 14%|█▍        | 18/125 [00:08<00:44,  2.43it/s] 15%|█▌        | 19/125 [00:09<00:42,  2.52it/s] 16%|█▌        | 20/125 [00:09<00:41,  2.55it/s] 17%|█▋        | 21/125 [00:09<00:43,  2.37it/s] 18%|█▊        | 22/125 [00:10<00:42,  2.41it/s] 18%|█▊        | 23/125 [00:10<00:40,  2.50it/s] 19%|█▉        | 24/125 [00:11<00:39,  2.53it/s] 20%|██        | 25/125 [00:11<00:38,  2.61it/s] 21%|██        | 26/125 [00:11<00:41,  2.40it/s] 22%|██▏       | 27/125 [00:12<00:39,  2.47it/s] 22%|██▏       | 28/125 [00:12<00:38,  2.49it/s] 23%|██▎       | 29/125 [00:13<00:43,  2.19it/s] 24%|██▍       | 30/125 [00:13<00:42,  2.24it/s] 25%|██▍       | 31/125 [00:14<00:40,  2.34it/s] 26%|██▌       | 32/125 [00:14<00:40,  2.32it/s] 26%|██▋       | 33/125 [00:14<00:38,  2.42it/s] 27%|██▋       | 34/125 [00:15<00:37,  2.46it/s] 28%|██▊       | 35/125 [00:15<00:35,  2.55it/s] 29%|██▉       | 36/125 [00:16<00:38,  2.30it/s] 30%|██▉       | 37/125 [00:16<00:37,  2.34it/s] 30%|███       | 38/125 [00:16<00:36,  2.41it/s] 31%|███       | 39/125 [00:17<00:34,  2.50it/s] 32%|███▏      | 40/125 [00:17<00:33,  2.52it/s] 33%|███▎      | 41/125 [00:18<00:32,  2.60it/s] 34%|███▎      | 42/125 [00:18<00:32,  2.59it/s] 34%|███▍      | 43/125 [00:18<00:31,  2.59it/s] 35%|███▌      | 44/125 [00:19<00:38,  2.11it/s] 36%|███▌      | 45/125 [00:19<00:35,  2.23it/s] 37%|███▋      | 46/125 [00:20<00:34,  2.29it/s] 38%|███▊      | 47/125 [00:20<00:32,  2.40it/s] 38%|███▊      | 48/125 [00:21<00:31,  2.44it/s] 39%|███▉      | 49/125 [00:21<00:30,  2.53it/s] 40%|████      | 50/125 [00:21<00:29,  2.52it/s] 41%|████      | 51/125 [00:22<00:28,  2.58it/s] 42%|████▏     | 52/125 [00:22<00:28,  2.58it/s] 42%|████▏     | 53/125 [00:22<00:27,  2.62it/s] 43%|████▎     | 54/125 [00:23<00:27,  2.59it/s] 44%|████▍     | 55/125 [00:23<00:27,  2.58it/s] 45%|████▍     | 56/125 [00:24<00:26,  2.64it/s] 46%|████▌     | 57/125 [00:24<00:26,  2.59it/s] 46%|████▋     | 58/125 [00:24<00:25,  2.64it/s] 47%|████▋     | 59/125 [00:25<00:25,  2.60it/s] 48%|████▊     | 60/125 [00:25<00:24,  2.65it/s] 49%|████▉     | 61/125 [00:26<00:24,  2.64it/s] 50%|████▉     | 62/125 [00:26<00:23,  2.67it/s] 50%|█████     | 63/125 [00:26<00:23,  2.64it/s] 51%|█████     | 64/125 [00:27<00:22,  2.69it/s] 52%|█████▏    | 65/125 [00:27<00:22,  2.65it/s] 53%|█████▎    | 66/125 [00:27<00:21,  2.68it/s] 54%|█████▎    | 67/125 [00:28<00:21,  2.66it/s] 54%|█████▍    | 68/125 [00:28<00:22,  2.53it/s] 55%|█████▌    | 69/125 [00:29<00:22,  2.51it/s] 56%|█████▌    | 70/125 [00:29<00:21,  2.53it/s] 57%|█████▋    | 71/125 [00:29<00:21,  2.52it/s] 58%|█████▊    | 72/125 [00:30<00:20,  2.60it/s] 58%|█████▊    | 73/125 [00:30<00:20,  2.57it/s] 59%|█████▉    | 74/125 [00:31<00:19,  2.62it/s] 60%|██████    | 75/125 [00:31<00:19,  2.60it/s] 61%|██████    | 76/125 [00:31<00:18,  2.63it/s] 62%|██████▏   | 77/125 [00:32<00:18,  2.61it/s] 62%|██████▏   | 78/125 [00:32<00:17,  2.63it/s] 63%|██████▎   | 79/125 [00:32<00:17,  2.60it/s] 64%|██████▍   | 80/125 [00:33<00:17,  2.65it/s] 65%|██████▍   | 81/125 [00:33<00:16,  2.61it/s] 66%|██████▌   | 82/125 [00:34<00:16,  2.66it/s] 66%|██████▋   | 83/125 [00:34<00:15,  2.63it/s] 67%|██████▋   | 84/125 [00:34<00:15,  2.67it/s] 68%|██████▊   | 85/125 [00:35<00:15,  2.65it/s] 69%|██████▉   | 86/125 [00:35<00:14,  2.67it/s] 70%|██████▉   | 87/125 [00:35<00:14,  2.66it/s] 70%|███████   | 88/125 [00:36<00:13,  2.70it/s] 71%|███████   | 89/125 [00:36<00:13,  2.66it/s] 72%|███████▏  | 90/125 [00:37<00:13,  2.63it/s] 73%|███████▎  | 91/125 [00:37<00:12,  2.67it/s] 74%|███████▎  | 92/125 [00:37<00:12,  2.65it/s] 74%|███████▍  | 93/125 [00:38<00:11,  2.68it/s] 75%|███████▌  | 94/125 [00:38<00:11,  2.64it/s] 76%|███████▌  | 95/125 [00:38<00:11,  2.69it/s] 77%|███████▋  | 96/125 [00:39<00:10,  2.64it/s] 78%|███████▊  | 97/125 [00:39<00:10,  2.67it/s] 78%|███████▊  | 98/125 [00:40<00:10,  2.64it/s] 79%|███████▉  | 99/125 [00:40<00:09,  2.67it/s] 80%|████████  | 100/125 [00:40<00:09,  2.64it/s] 81%|████████  | 101/125 [00:41<00:09,  2.67it/s] 82%|████████▏ | 102/125 [00:41<00:08,  2.62it/s] 82%|████████▏ | 103/125 [00:41<00:08,  2.67it/s] 83%|████████▎ | 104/125 [00:42<00:07,  2.63it/s] 84%|████████▍ | 105/125 [00:42<00:07,  2.67it/s] 85%|████████▍ | 106/125 [00:43<00:07,  2.63it/s] 86%|████████▌ | 107/125 [00:43<00:06,  2.66it/s] 86%|████████▋ | 108/125 [00:43<00:06,  2.62it/s] 87%|████████▋ | 109/125 [00:44<00:06,  2.65it/s] 88%|████████▊ | 110/125 [00:44<00:05,  2.62it/s] 89%|████████▉ | 111/125 [00:44<00:05,  2.66it/s] 90%|████████▉ | 112/125 [00:45<00:04,  2.62it/s] 90%|█████████ | 113/125 [00:45<00:04,  2.68it/s] 91%|█████████ | 114/125 [00:46<00:04,  2.63it/s] 92%|█████████▏| 115/125 [00:46<00:03,  2.69it/s] 93%|█████████▎| 116/125 [00:46<00:03,  2.65it/s] 94%|█████████▎| 117/125 [00:47<00:02,  2.68it/s] 94%|█████████▍| 118/125 [00:47<00:02,  2.66it/s] 95%|█████████▌| 119/125 [00:47<00:02,  2.69it/s] 96%|█████████▌| 120/125 [00:48<00:01,  2.66it/s] 97%|█████████▋| 121/125 [00:48<00:01,  2.69it/s] 98%|█████████▊| 122/125 [00:49<00:01,  2.67it/s] 98%|█████████▊| 123/125 [00:49<00:00,  2.71it/s] 99%|█████████▉| 124/125 [00:49<00:00,  2.66it/s]100%|██████████| 125/125 [00:50<00:00,  2.30it/s]100%|██████████| 125/125 [00:50<00:00,  2.47it/s]
tensor([0.8876, 0.3726, 0.7625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8337,
        0.0000, 0.7911, 0.0014, 0.0000, 0.6657, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000], device='cuda:0')
tensor([0.8876, 0.3726, 0.7625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.8337,
        0.0000, 0.7911, 0.0014, 0.0000, 0.6657, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000], device='cuda:1')
  0%|          | 0/58 [00:00<?, ?it/s]  2%|▏         | 1/58 [00:00<00:49,  1.16it/s]  3%|▎         | 2/58 [00:00<00:24,  2.32it/s]  5%|▌         | 3/58 [00:01<00:16,  3.42it/s]  7%|▋         | 4/58 [00:01<00:12,  4.41it/s]  9%|▊         | 5/58 [00:01<00:10,  5.26it/s] 10%|█         | 6/58 [00:01<00:08,  5.98it/s] 12%|█▏        | 7/58 [00:01<00:07,  6.55it/s] 14%|█▍        | 8/58 [00:01<00:07,  7.00it/s] 16%|█▌        | 9/58 [00:01<00:06,  7.35it/s] 17%|█▋        | 10/58 [00:01<00:06,  7.63it/s] 19%|█▉        | 11/58 [00:02<00:06,  7.81it/s] 21%|██        | 12/58 [00:02<00:05,  7.81it/s] 22%|██▏       | 13/58 [00:02<00:05,  7.87it/s] 24%|██▍       | 14/58 [00:02<00:05,  7.94it/s] 26%|██▌       | 15/58 [00:02<00:05,  7.95it/s] 28%|██▊       | 16/58 [00:02<00:05,  8.05it/s] 29%|██▉       | 17/58 [00:02<00:06,  6.68it/s] 31%|███       | 18/58 [00:03<00:05,  7.04it/s] 33%|███▎      | 19/58 [00:03<00:05,  7.27it/s] 34%|███▍      | 20/58 [00:03<00:05,  7.32it/s] 36%|███▌      | 21/58 [00:03<00:04,  7.47it/s] 38%|███▊      | 22/58 [00:03<00:04,  7.46it/s] 40%|███▉      | 23/58 [00:03<00:04,  7.41it/s] 41%|████▏     | 24/58 [00:03<00:04,  7.59it/s] 43%|████▎     | 25/58 [00:03<00:04,  7.77it/s] 45%|████▍     | 26/58 [00:04<00:04,  6.89it/s] 47%|████▋     | 27/58 [00:04<00:05,  6.19it/s] 48%|████▊     | 28/58 [00:04<00:05,  5.72it/s] 50%|█████     | 29/58 [00:04<00:04,  6.17it/s] 52%|█████▏    | 30/58 [00:04<00:04,  5.73it/s] 53%|█████▎    | 31/58 [00:05<00:04,  5.50it/s] 55%|█████▌    | 32/58 [00:05<00:04,  5.32it/s] 57%|█████▋    | 33/58 [00:05<00:04,  5.19it/s] 59%|█████▊    | 34/58 [00:05<00:04,  5.15it/s] 60%|██████    | 35/58 [00:05<00:04,  5.12it/s] 62%|██████▏   | 36/58 [00:06<00:04,  5.14it/s] 64%|██████▍   | 37/58 [00:06<00:04,  5.14it/s] 66%|██████▌   | 38/58 [00:06<00:03,  5.07it/s] 67%|██████▋   | 39/58 [00:06<00:03,  5.03it/s] 69%|██████▉   | 40/58 [00:06<00:03,  5.61it/s] 71%|███████   | 41/58 [00:06<00:02,  5.70it/s] 72%|███████▏  | 42/58 [00:07<00:02,  6.22it/s] 74%|███████▍  | 43/58 [00:07<00:02,  6.61it/s] 76%|███████▌  | 44/58 [00:07<00:02,  6.94it/s] 78%|███████▊  | 45/58 [00:07<00:01,  7.20it/s] 79%|███████▉  | 46/58 [00:07<00:01,  7.41it/s] 81%|████████  | 47/58 [00:07<00:01,  7.40it/s] 83%|████████▎ | 48/58 [00:07<00:01,  6.52it/s] 84%|████████▍ | 49/58 [00:08<00:01,  5.91it/s] 86%|████████▌ | 50/58 [00:08<00:01,  6.28it/s] 88%|████████▊ | 51/58 [00:08<00:01,  6.69it/s] 90%|████████▉ | 52/58 [00:08<00:00,  7.07it/s] 91%|█████████▏| 53/58 [00:08<00:00,  7.31it/s] 93%|█████████▎| 54/58 [00:08<00:00,  7.49it/s] 95%|█████████▍| 55/58 [00:08<00:00,  7.70it/s] 97%|█████████▋| 56/58 [00:09<00:00,  7.83it/s] 98%|█████████▊| 57/58 [00:09<00:00,  7.90it/s]100%|██████████| 58/58 [00:09<00:00,  7.99it/s]100%|██████████| 58/58 [00:09<00:00,  6.19it/s]
tensor([0.0426, 0.2173, 0.0000, 0.2186, 0.0000, 0.0121, 0.0000, 0.0000, 0.0554,
        0.0000, 0.0000, 0.0000], device='cuda:1')
tensor([0.0426, 0.2173, 0.0000, 0.2186, 0.0000, 0.0121, 0.0000, 0.0000, 0.0554,
        0.0000, 0.0000, 0.0000], device='cuda:0')
Cam single mIOU is: 0.04549616947770119
CityScapes single mIOU is: 0.22708375751972198

|           |   single_scale |
|-----------+----------------|
| 0.0454962 |       0.227084 |
iter: 2100/30000, Cam_epoch: 0, CityScapes_epoch: 11.28494623655914, lr: 0.004712, eta: 9:15:44, time: 176.19, loss: 11.4975, loss_seg: 1.8805, loss_contrast: 0.8441, loss_domain:  1.2005, loss_aux0: 1.9513, loss_aux1: 1.9092, loss_aux2: 1.8704, loss_aux3: 1.8415
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 47554 closing signal SIGTERM
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: -15) local_rank: 0 (pid: 47553) of binary: /home/cxh/anaconda3/envs/bisenet/bin/python
Traceback (most recent call last):
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 765, in <module>
    main()
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 761, in main
    run(args)
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/run.py", line 752, in run
    elastic_launch(
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 245, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
=======================================================
tools/train_amp_contrast_single.py FAILED
-------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
-------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-12-13_21:23:23
  host      : vgpu01.hpc.local
  rank      : 0 (local_rank: 0)
  exitcode  : -15 (pid: 47553)
  error_file: <N/A>
  traceback : Signal 15 (SIGTERM) received by PID 47553
=======================================================
[W 2022-12-15 10:59:34.918 LabApp] 'ip' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-15 10:59:34.918 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-15 10:59:34.918 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-15 10:59:34.918 LabApp] 'port' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2022-12-15 10:59:34.918 LabApp] 'allow_remote_access' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[I 2022-12-15 10:59:34.929 ServerApp] jupyterlab | extension was successfully linked.
[I 2022-12-15 10:59:34.943 ServerApp] nbclassic | extension was successfully linked.
[I 2022-12-15 10:59:35.469 ServerApp] notebook_shim | extension was successfully linked.
[W 2022-12-15 10:59:35.550 ServerApp] WARNING: The Jupyter server is listening on all IP addresses and not using encryption. This is not recommended.
[I 2022-12-15 10:59:35.552 ServerApp] notebook_shim | extension was successfully loaded.
[I 2022-12-15 10:59:35.553 LabApp] JupyterLab extension loaded from /home/cxh/anaconda3/envs/bisenet/lib/python3.8/site-packages/jupyterlab
[I 2022-12-15 10:59:35.553 LabApp] JupyterLab application directory is /home/cxh/anaconda3/envs/bisenet/share/jupyter/lab
[I 2022-12-15 10:59:35.557 ServerApp] jupyterlab | extension was successfully loaded.
[I 2022-12-15 10:59:35.566 ServerApp] nbclassic | extension was successfully loaded.
[I 2022-12-15 10:59:35.567 ServerApp] Serving notebooks from local directory: /home/cxh/mr/BiSeNet
[I 2022-12-15 10:59:35.567 ServerApp] Jupyter Server 1.18.1 is running at:
[I 2022-12-15 10:59:35.567 ServerApp] http://localhost:14923/lab
[I 2022-12-15 10:59:35.567 ServerApp]  or http://127.0.0.1:14923/lab
[I 2022-12-15 10:59:35.567 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 2022-12-15 11:00:06.482 ServerApp] 302 GET / (::1) 1.31ms
[W 2022-12-15 11:00:06.492 ServerApp] Clearing invalid/expired login cookie username-localhost-8888
[W 2022-12-15 11:00:06.494 LabApp] Clearing invalid/expired login cookie username-localhost-8888
[I 2022-12-15 11:00:06.495 LabApp] 302 GET /lab? (::1) 4.07ms
[I 2022-12-15 11:00:12.955 ServerApp] 302 POST /login?next=%2Flab%3F (::1) 69.56ms
[W 2022-12-15 11:00:15.618 LabApp] Could not determine jupyterlab build status without nodejs
[I 2022-12-15 11:00:16.161 ServerApp] New terminal with automatic name: 2
[I 2022-12-15 18:14:56.823 ServerApp] 302 GET / (::1) 1.50ms
[W 2022-12-15 18:14:58.553 LabApp] Could not determine jupyterlab build status without nodejs
[I 2022-12-16 15:41:25.906 ServerApp] 302 GET / (::1) 1.47ms
[W 2022-12-16 15:41:27.930 LabApp] Could not determine jupyterlab build status without nodejs
[I 2022-12-18 10:51:59.957 ServerApp] 302 GET / (::1) 5.94ms
[W 2022-12-18 10:52:01.866 LabApp] Could not determine jupyterlab build status without nodejs
[I 2022-12-19 10:32:48.045 ServerApp] 302 GET / (::1) 2.21ms
[W 2022-12-19 10:32:49.817 LabApp] Could not determine jupyterlab build status without nodejs
[I 2022-12-23 14:51:21.788 ServerApp] 302 GET / (::1) 2.21ms
[W 2022-12-23 14:51:23.386 LabApp] Could not determine jupyterlab build status without nodejs
[I 2022-12-29 19:39:45.372 ServerApp] 302 GET / (::1) 2.18ms
[W 2022-12-29 19:39:46.958 LabApp] Could not determine jupyterlab build status without nodejs
